<script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-p34f1UUtsS3wqzfto5wAAmdvj+osOnFyQFpp4Ua3gs/ZVWx6oOypYoCJhGGScy+8" crossorigin="anonymous"></script>

<script src="https://cdn.jsdelivr.net/npm/@glidejs/glide"></script>

<script>
    const config = {
        type: 'carousel',
        perView: 4,
        gap: 30,
        autoplay: 5000,
        hoverpause: true,
        breakpoints: {
            700: {
                perView: 1
            }
        }

    }
    
    new Glide('.glide', config).mount()
</script>

<script>
    const toCurr = price => {
        return new Intl.NumberFormat('ru-RU', {
            currency: 'usd',
            style: 'currency'
        }).format(price)
    }

    document.querySelectorAll('.price').forEach(node => {
        node.textContent = toCurr(node.textContent)  
    })

    const $card = document.querySelector('#card')
    
    if ($card) {
        $card.addEventListener('click', event => {
            if (event.target.classList.contains('js-remove')) {
                const id = event.target.dataset.id
                
                
                fetch('/card/remove/' + id, {
                    method: 'delete'
                }).then(res => res.json())
                .then(card => {
                    if (card.foods.length) {
                        const html = card.foods.map(c => {
                            return `
                            <tr>
                                <td>${c.title}</td>
                                <td>${c.count}</td>
                                <td>${toCurr(c.price)}</td>
                                
                                <td>
                                    <button class="btn btn-samll js-remove" data-id="${c.id}">Delete</button>
                                </td>
                            </tr>
                            `
                        }).join('')
                        $card.querySelector('tbody').innerHTML = html
                        $card.querySelector('.price').textContent = toCurr(card.price)
                    } else {
                        $card.innerHTML = '<p>empty</p>'
                    }
                })
            }
        })
    }

    const toDate = date => {
        return new Intl.DateTimeFormat('ru-RU', {
            day: '2-digit',
            month: 'long',
            year: 'numeric',
            hour: '2-digit',
            minute: '2-digit',
            second: '2-digit'
        }).format(new Date(date))
    }

    document.querySelectorAll('.date').forEach(node => {
        node.textContent = toDate(node.textContent)
    })


    M.Tabs.init(document.querySelectorAll('.tabs'))



    //navlinks
    var navLinks = document.getElementById("navlinks");


</script>
